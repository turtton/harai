---
import '@/styles/global.css'
import ArticleGrid from '../components/islands/article-grid'
import LoadMoreTrigger from '../components/islands/load-more-trigger'
import SearchControl from '../components/islands/search-control'
import TagFilterControl from '../components/islands/tag-filter-control'
import { createDrizzleClient } from '../db/client'
import { logError } from '../db/logger'
import { DatabaseOperations } from '../db/operations'
import { dbArticleToArticle } from '../lib/types'
import { type AstroLocals, getCloudflareEnv } from '../types/astro'

// SSR で初期データのみ取得（軽量化）
let initialArticles = []
let allTags = []
let hasError = false
let errorMessage = ''

const init_max_article_count = 5

try {
  // Cloudflare bindings から環境変数にアクセス
  const env = getCloudflareEnv(Astro.locals as AstroLocals)
  const db = createDrizzleClient(env.DB)
  const dbOps = new DatabaseOperations(db)

  // 初期記事データ (5件のみ) とタグ一覧を並行取得
  const [articlesData, tagsData] = await Promise.all([
    dbOps.articles.getPublishedArticles(init_max_article_count, 0),
    dbOps.articles.getAllTags(),
  ])

  initialArticles = articlesData.map(dbArticleToArticle)
  allTags = tagsData
} catch (error) {
  hasError = true
  errorMessage = '記事データの取得に失敗しました。'

  logError('Failed to load homepage', error, {
    operation: 'getHomepageData',
  })
}
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="技術記事と PDF スライドを配信するブログサイト"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <title>ブログ - 記事一覧</title>
  </head>
  <body>
    {
      hasError ? (
        <div class="min-h-screen bg-background flex items-center justify-center">
          <div class="text-center space-y-4">
            <h1 class="text-2xl font-bold">エラーが発生しました</h1>
            <p class="text-muted-foreground">
              しばらく時間をおいてから再度お試しください。
            </p>
            <a
              href="/"
              class="inline-flex h-10 items-center justify-center rounded-md bg-primary px-8 py-2 text-sm font-medium text-primary-foreground ring-offset-background transition-colors hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2"
            >
              再読み込み
            </a>
          </div>
        </div>
      ) : (
        <div class="h-screen bg-background flex flex-col">
          {/* ヘッダー */}
          <header class="border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
            <div class="container flex h-16 items-center space-x-4 sm:justify-between sm:space-x-0">
              <div class="flex gap-6 md:gap-10">
                <a href="/" class="flex items-center space-x-2">
                  <span class="inline-block font-bold text-xl">Blog</span>
                </a>
              </div>
            </div>
          </header>

          {/* メインコンテンツ */}
          <main class="container py-8 flex-1 min-h-0">
            <div class="h-full flex flex-col space-y-8">
              <div class="space-y-2 flex-shrink-0">
                <h1 class="text-3xl font-bold tracking-tight">記事一覧</h1>
                <p class="text-muted-foreground">
                  技術記事と PDF スライドを配信するブログ
                </p>
              </div>

              {/* 記事管理 - nanostore による状態共有 */}
              <div class="flex-1 min-h-0">
                <div class="flex flex-col md:flex-row gap-4 md:gap-8 h-full min-h-0">
                  {/* 左サイドバー（固定） - モバイルでは上に表示 */}
                  <div class="w-full md:w-80 md:flex-shrink-0 space-y-3 md:space-y-6 flex-shrink-0">
                    {/* 検索コントロール（遅延読み込み） */}
                    <SearchControl client:idle />

                    {/* タグフィルターコントロール（遅延読み込み） */}
                    <TagFilterControl client:idle />
                  </div>

                  {/* 右側記事一覧エリア（スクロール可能） */}
                  <div class="flex-1 min-h-0 overflow-auto">
                    <div class="space-y-6">
                      {/* 記事グリッド（即座に表示、初期データ付き） */}
                      <ArticleGrid
                        client:load
                        initialArticles={initialArticles}
                        initialArticleMaxCount={init_max_article_count}
                        initialTags={allTags}
                      />

                      {/* 無限スクロールトリガー（画面に入ったら読み込み） */}
                      <LoadMoreTrigger client:visible />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </main>

          {/* フッター */}
          <footer class="border-t py-6 md:py-0">
            <div class="container flex flex-col items-center justify-between gap-4 md:h-24 md:flex-row">
              <p class="text-center text-sm text-muted-foreground md:text-left">
                © 2024 Blog. All rights reserved.
              </p>
            </div>
          </footer>
        </div>
      )
    }
  </body>
</html>
